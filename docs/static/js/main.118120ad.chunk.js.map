{"version":3,"sources":["Components/DropDownList.js","Components/Popup.js","Components/DataTable copy.js","countriesList.js","Components/Skin.js","Components/CountryTable.js","Components/Footer.js","Components/NavBar.js","Components/NavBar2.js","Components/Country.js","Components/GlobalFilter.js","Components/SortedTable.js","Components/PaginationTable.js","Components/ApiTable.js","App.js","reportWebVitals.js","index.js"],"names":["DropDownList","list","useState","activeItem","setActiveItem","style","paddingTop","map","item","key","className","onClick","name","capital","currency","language","maxWidth","src","img","alt","PopupContent","props","color","fontWeight","handleClose","content","Popup","data","btnValue","paragraph","title","imgSrc","isOpen","setIsOpen","togglePopup","type","class","backgroundColor","border","borderRadius","DataTable","rowList","setRowList","initialForm","formData","setFormData","handleAddCountry","useCallback","prevList","useEffect","fetch","then","response","json","console","log","placeholder","value","onChange","event","prevState","target","padding","minWidth","scope","align","row","index","countriesList","SkinChange","position","margin","id","CountryTable","numericCode","population","slice","minwidth","Footer","AppBar","Container","Toolbar","Typography","variant","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","NavBar2","Navbar","bg","Brand","href","Nav","Link","Form","inline","FormControl","Button","FetchCountry","languages","flag","Country","width","textAlign","currenct","RandomSelector","randItem","setRandItem","length","i","parseInt","Math","random","GlobalFilter","filter","setFilter","e","SortedTable","columns","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","styles","thead","td","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","PaginationTable","minHeight","fontSize","initialState","pageSize","usePagination","page","nextPage","previousPage","canNextPage","canPreviousPage","disabled","ApiTable","setCells","getData","a","resp","React","useMemo","Header","accessor","Cell","info","height","original","image","url","App","popUpList","setPopUpList","setTextColor","bgColor","setBgColor","company","contact","country","dataJson","Skin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.118120ad.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\n\r\nconst DropDownList = ({list}) => {\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  return (\r\n    <div style = {{paddingTop:\"60px\"}}>\r\n      {list && list.map((item, key) => <div key={key}>\r\n          <div className = \"countryname\" onClick={() => setActiveItem(activeItem === key ? null : key)}>{item.name}</div>\r\n          {key === activeItem && <span className = \"countrydrop\">\r\n            <br/> capital - {item.capital},\r\n            <br/> currency - {item.currency},\r\n            <br/> language - {item.language}\r\n            <img style={{maxWidth:'600px'}} src={item.img} alt={item.capital} />\r\n          </span>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDownList","import React, { useState, useCallback } from 'react';\r\n\r\n//popupbox, content, buttons and useState go together\r\n\r\nconst PopupContent = props => {\r\n\r\n    return (\r\n      <div className=\"popup-box\">\r\n        <div className=\"box\">\r\n          <span style={{color:\"#ab0075\", fontWeight:'750'}} className=\"close-icon\" onClick={props.handleClose}>X</span>\r\n          {props.content}\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  };\r\n\r\n\r\n  function Popup({data : {btnValue, paragraph, title, imgSrc}}) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n      setIsOpen(!isOpen);\r\n    }\r\n   \r\n    return <div>\r\n      <button type=\"button\"\r\n       class=\"btn btn-primary\"\r\n       style={{backgroundColor: '#ab0075', border:'none', borderRadius:'8px'}}\r\n        onClick={togglePopup}\r\n  >{btnValue}</button>\r\n        \r\n      <p>{paragraph}</p>\r\n      {isOpen && <PopupContent\r\n        content={\r\n          <div>\r\n            <h1 className = \"poptext\">{title}</h1>\r\n            <img src={imgSrc} alt={title}/>\r\n          </div>\r\n        }\r\n        handleClose={togglePopup}\r\n      />}\r\n\r\n    </div>\r\n  }\r\n \r\n  \r\n  export default Popup;","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nfunction createData(name, capital, language, currency) {\r\n  return { name, capital, language, currency };\r\n}\r\n\r\nexport default function DataTable() {\r\n  const [rowList, setRowList] = useState([]);\r\n  const initialForm = { name: \"\", capital: \"\", language: \"\", currency: \"\" };\r\n  const [formData, setFormData] = useState(initialForm);\r\n\r\n  const handleAddCountry = useCallback(() => {\r\n    setRowList((prevList) => [...prevList, formData]);\r\n    setFormData(initialForm);\r\n  }, [setRowList, setFormData, formData]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/mariarogina/1bf4e1947ec2fc1e8ded4882e57f4d69/raw/8b935c5ca14f52d9802ccbd1ed07c362830c6a89/countriesdata.json\"\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setRowList(\r\n          data.map((item) =>\r\n            createData(item.name, item.capital, item.language, item.currency)\r\n          )\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  if (!rowList) {\r\n    return <div>Still Loading</div>;\r\n  }\r\n\r\n  console.log(rowList);\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"50px\" }}>\r\n      <h1 style={{ color: \"white\" }}>The table of Three Countries</h1>\r\n      <br />\r\n\r\n      <div>\r\n        <div>\r\n          <label>\r\n            name\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"name\"\r\n              value={formData.name}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  name: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            capital\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"capital\"\r\n              value={formData.capital}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  capital: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            language\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"language\"\r\n              value={formData.language}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  language: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            currency\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"currency\"\r\n              value={formData.currency}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  currency: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <br/>\r\n          <br/>\r\n          <button type=\"button\" className=\"btn btn-primary\" style={{padding:'10px', minWidth:\"100px\"}} onClick={handleAddCountry}>Add a country</button>\r\n        </div>\r\n        <br/>\r\n\r\n        <table className=\"table\" style={{ color: \"inherit\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" align=\"center\">\r\n                No.\r\n              </th>\r\n              <th scope=\"col\" align=\"center\">\r\n                Name\r\n              </th>\r\n              <th scope=\"col\" align=\"center\">\r\n                Capital\r\n              </th>\r\n              <th scope=\"col\" align=\"center\">\r\n                Language\r\n              </th>\r\n              <th scope=\"col\" align=\"center\">\r\n                Currency\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {rowList.map((row, index) => (\r\n              <tr key={row.name}>\r\n                <th scope=\"row\">{index +1}</th>\r\n\r\n                <td align=\"center\">{row.name}</td>\r\n                <td align=\"center\">{row.capital}</td>\r\n                <td align=\"center\">{row.language}</td>\r\n                <td align=\"center\">{row.currency}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const countriesList = [\r\n  { name: \"RUSSIA\", capital: \"Moscow\", currency: \"RUB\", language: \"Russian\", img: \"https://passportsvisasandmore.co/wp-content/uploads/2019/08/Vita-notturna-Mosca-by-night-580x341.jpg\" },\r\n  { name: \"FINLAND\", capital: \"Helsinki\", currency: \"EUR\", language: \"Finnish\", img: \"https://ak.picdn.net/shutterstock/videos/1023580819/thumb/1.jpg\" },\r\n  { name: \"UK\", capital: \"London\", currency: \"GBP\", language: \"English\", img: \"https://www.sftrips.com/wp-content/uploads/2016/03/z8888.jpg\" }\r\n];\r\n","\r\nimport React from 'react';\r\n\r\n\r\nfunction SkinChange(props) {\r\n\r\n\r\n\r\nreturn (\r\n  <div style={{'textAlign':\"left\", position:'fixed'}}>\r\n<button\r\n\r\nclass=\"btn btn-primary\"\r\nstyle={{backgroundColor:'#2c4e85', borderRadius:'8px', border:'none', margin:\"70px 20px\"}}\r\nonClick={props.onClick}  id = \"change\">\r\n\r\n  Change Skin\r\n</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SkinChange;","import React, { useCallback } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction createData(numericCode, name, capital, population) {\r\n  return { numericCode, name, capital, population };\r\n}\r\n\r\nexport default function CountryTable() {\r\n  const [rowList, setRowList] = useState(null);\r\n  const initialForm = {\r\n    numericCode: \"\",\r\n    name: \"Country\",\r\n    capital: \"\",\r\n    population: 0,\r\n  };\r\n  const [formData, setFormData] = useState(initialForm);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setRowList(\r\n          data\r\n            .slice(20, 35)\r\n            .map((item) =>\r\n              createData(\r\n                item.numericCode,\r\n                item.name,\r\n                item.capital,\r\n                item.population\r\n              )\r\n            )\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const handleAddCountry = useCallback(() => {\r\n    setRowList((prevList) => [...prevList, formData]);\r\n    setFormData(initialForm);\r\n  }, [setRowList, setFormData, formData]);\r\n\r\n  if (!rowList) {\r\n    return <div>Still Loading</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"50px\" }}>\r\n      <h1 style={{ color: \"#ab0075\" }}>The Table of Countries</h1>\r\n      <br />\r\n      <div>\r\n        <label>\r\n          numericCode\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"numericCode\"\r\n            value={formData.numericCode}\r\n            onChange={(event) =>\r\n              setFormData((prevState) => ({\r\n                ...prevState,\r\n                numericCode: event.target.value,\r\n              }))\r\n            }\r\n          />\r\n        </label>\r\n        <label>\r\n          name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            value={formData.name}\r\n            onChange={(event) =>\r\n              setFormData((prevState) => ({\r\n                ...prevState,\r\n                name: event.target.value,\r\n              }))\r\n            }\r\n          />\r\n        </label>\r\n        <label>\r\n          capital\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"capital\"\r\n            value={formData.capital}\r\n            onChange={(event) =>\r\n              setFormData((prevState) => ({\r\n                ...prevState,\r\n                capital: event.target.value,\r\n              }))\r\n            }\r\n          />\r\n        </label>\r\n        <label>\r\n          population\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"population\"\r\n            value={formData.population}\r\n            onChange={(event) =>\r\n              setFormData((prevState) => ({\r\n                ...prevState,\r\n                population: event.target.value,\r\n              }))\r\n            }\r\n          />\r\n        </label> \r\n\r\n        <br/>\r\n        <br/>\r\n        <button type=\"button\" className=\"btn btn-primary\" style={{padding:'10px', minwidth:\"100px\"}} onClick={handleAddCountry}>Add a country</button>\r\n      </div>\r\n      <br/>\r\n      <table className=\"table\" style={{ color: \"inherit\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" align=\"center\">\r\n              No.\r\n            </th>\r\n            <th scope=\"col\" align=\"center\">\r\n              Name\r\n            </th>\r\n            <th scope=\"col\" align=\"center\">\r\n              Capital\r\n            </th>\r\n            <th scope=\"col\" align=\"center\">\r\n              Population\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {rowList.map((row) => (\r\n            <tr key={row.numericCode}>\r\n              <th scope=\"row\">{row.numericCode}</th>\r\n\r\n              <td align=\"center\">{row.name}</td>\r\n              <td align=\"center\">{row.capital}</td>\r\n              <td align=\"center\">{row.population}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport AppBar from '@material-ui/core/AppBar';  \r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Container maxWidth=\"md\">\r\n            <Toolbar>\r\n              <Typography variant=\"body1\" color=\"inherit\">\r\n                © 2021 Study React\r\n              </Typography>\r\n            </Toolbar>\r\n          </Container>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function AppNavBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Photos\r\n          </Typography>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Photos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function NavBar2() {\r\n  \r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-info\">Search</Button>\r\n    </Form>\r\n  </Navbar>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction createData(name, capital, languages, flag) {\r\n  return { name, capital, languages, flag };\r\n}\r\n\r\nexport default function FetchCountry() {\r\n  const [rowList, setRowList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setRowList(\r\n          data.map((item) =>\r\n            createData(item.name, item.capital, item.languages, item.flag)\r\n          )\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  if (!rowList) {\r\n    return <div>Still Loading</div>;\r\n  }\r\n\r\n  console.log(rowList);\r\n\r\n  return <RandomSelector list={rowList} />;\r\n}\r\n\r\nfunction Country(props) {\r\n \r\n  var style = {\r\n    border: \"2px solid #B0B0B0\",\r\n    width: \"650px\",\r\n    borderRadius: \"20px\",\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    padding: \"10px\",\r\n    backgroundColor: \"#E8E8E8\",\r\n    color:\"#2c4e85\"\r\n  };\r\n\r\n  var picStyle = {\r\n    maxWidth:'300px'\r\n  };\r\n\r\n  return (\r\n    <div style={style} className=\"col\">\r\n      <h1>{props.item.name}</h1>\r\n      <h2>Description: {props.item.capital}</h2>\r\n\r\n      <h3>Temperament {props.item.currenct}</h3>\r\n      <br />\r\n      <img style={picStyle} src={props.item.flag} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RandomSelector(props) {\r\n  const rowList = props.list;\r\n    \r\n   const [randItem, setRandItem] = useState(rowList[1]);\r\n\r\n  const returnCountry = () => {\r\n    var i = parseInt(Math.random() * (rowList.length - 1));\r\n    setRandItem(rowList[i]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"back\">\r\n      <div className=\"centered\">\r\n        <h1>Countries</h1>\r\n        <h1>All of them: {rowList.length}</h1>\r\n        <br />\r\n\r\n        <button className=\"btn btn-success\" onClick={returnCountry}>\r\n          Choose the country\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <div className=\"centered\">\r\n          {randItem === \"\" ? null : (\r\n            <Country item={randItem} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <br /><br />\r\n    </div>\r\n  );\r\n}\r\n","export default function GlobalFilter({ filter, setFilter }) {\r\n    return (\r\n      <>\r\n        <p style={{textAlign:\"center\"}}> Search here: </p>\r\n        <input value={filter || \"\"} onChange={(e) => setFilter(e.target.value)} />\r\n      </>\r\n    );\r\n  }","import React from \"react\";\r\nimport { useSortBy, useTable, useGlobalFilter } from \"react-table\";\r\nimport GlobalFilter from \"./GlobalFilter\"\r\n\r\nexport  function SortedTable({ columns, data }) {\r\n  // Use the useTable Hook to send the columns and data to build the table\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows, // rows for the table based on the data passed\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    state, //table state\r\n    setGlobalFilter //applies global filtering to the table.\r\n\r\n} = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy\r\n    \r\n  );\r\n  const { globalFilter } = state;\r\n  /* \r\n    Render the UI for your table\r\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\r\n  */\r\n  const styles = {\r\n    thead: {\r\n      backgroundColor: \"#2c4e85\"\r\n    },\r\n    td: {\r\n      padding: \"10px\",\r\n      border: \"dotted 1px black\"\r\n    }\r\n  };\r\n\r\n  return ( <>\r\n  <h1>RANDOM SORTED FILTERED TABLE</h1>\r\n  <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n    <table style={{textAlign:\"center\",margin:'0px auto'}} {...getTableProps()}>\r\n      <thead style={styles.thead}>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                {column.render(\"Header\")}\r\n                <span>\r\n                  {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\r\n                </span>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return <td style={styles.td} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { useTable, usePagination } from \"react-table\";\r\n\r\nexport function PaginationTable({ columns, data,  }) {\r\n\r\n\r\n    const styles = {\r\n        thead: {\r\n          backgroundColor: \"#2c4e85\"\r\n        },\r\n        td: {\r\n          padding: \"10px\",\r\n          border: \"dotted 1px black\",\r\n          maxWidth:'400px',\r\n          minHeight:'70px',\r\n          fontSize:'1.3rem'\r\n        }\r\n      };\r\n  // Use the useTable Hook to send the columns and data to build the table\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    page, // fetch the current page\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageSize: 2 }\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <div >\r\n      <table style ={{textAlign:\"center\",margin:\"0 auto\"}} {...getTableProps()}>\r\n        <thead style={styles.thead}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={styles.td} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    \r\n                  );\r\n                })}\r\n               \r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button type=\"button\" className=\"info\" style={{backgroundColor: '#370F96', margin:'5px', padding:'10px', color:'white', fontSize:'1.1rem', borderRadius:'6px'}} onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous page{\" \"}\r\n      </button>\r\n      <button type=\"button\" className=\"info\" style={{backgroundColor: '#9B2076', margin:'5px', padding:'10px', color:'white', fontSize:'1.1rem', borderRadius:'6px' }} onClick={() => nextPage()} disabled={!canNextPage}>\r\n        Next page{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n}","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PaginationTable } from \"./PaginationTable\";\r\n\r\nexport function ApiTable() {\r\n  const [cells, setCells] = useState([]);\r\n \r\n\r\n  const getData = async () => {\r\n    const resp = await fetch(\"https://api.thecatapi.com/v1/breeds\");\r\n    const data = await resp.json();\r\n    setCells(data);\r\n   \r\n  };\r\n  \r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\" // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Description\",\r\n        accessor: \"description\"\r\n      },\r\n      {\r\n        Header: \"Temperament\",\r\n        accessor: \"temperament\"\r\n      }\r\n,\r\n      {\r\n        Header: \"Image\",\r\n        accessor: \"image.url\",  \r\n        Cell: (row) => {\r\n          console.info(row)\r\n          return <div><img height={200} src={row.row.original.image?.url}/></div>\r\n        },\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return <>\r\n  <h1>THE CAT TABLE (paginated)</h1>\r\n  \r\n  {cells && <PaginationTable columns={columns} data={cells} />}</>;\r\n}","import \"./App.css\";\r\nimport DropDownList from \"./Components/DropDownList\";\r\nimport Popup from \"./Components/Popup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"./Components/DataTable copy\";\r\nimport { countriesList } from \"./countriesList\";\r\nimport SkinChange from \"./Components/Skin\";\r\nimport CountryTable from \"./Components/CountryTable\";\r\nimport Footer from \"./Components/Footer\";\r\nimport AppNavBar from \"./Components/NavBar\";\r\nimport NavBar2 from \"./Components/NavBar2\";\r\n import  FetchCat from \"./Components/Cat\";\r\n import FetchCountry from \"./Components/Country\";\r\nimport { SortedTable }from './Components/SortedTable';\r\nimport { ApiTable } from './Components/ApiTable';\r\n\r\n// const popUpList = [\r\n//   {\"btnValue\" : \"Come and visit Moscow\", \"paragraph\" : \"Moscow is the Capital of Russia\", \"title\": \"Welcome to Moscow\", \"imgSrc\": \"https://gkd.ru/assets/i/ai/4/2/8/i/2884202.jpg\"},\r\n//   {\"btnValue\" : \"Come and visit Helsinki\", \"paragraph\" : \"Helsinki is the Capital of Finland\", \"title\": \"Welcome to HEL\", \"imgSrc\": \"https://www.likefinland.com/images/artikkelikuvat/helsinki/allas%20sea%20pool1.jpg\"},\r\n//   {\"btnValue\" : \"Come and visit London\", \"paragraph\" : \"London is the Capital of Great Britain\", \"title\": \"Welcome to London\", \"imgSrc\": \"https://www.overseasattractions.com/wp-content/uploads/2018/08/london-at-night.jpg\"}\r\n// ]\r\n\r\n\r\nfunction App() {\r\n  const [popUpList, setPopUpList] = useState([]);\r\n  const [color, setTextColor] = useState(\"black\");\r\n  const [bgColor, setBgColor] = useState(\"#6C8B93\");\r\n  \r\n \r\n  let styles = { backgroundColor: bgColor, color: color };\r\n\r\n  //tables\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Company\",\r\n        accessor: \"company\" // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Contact\",\r\n        accessor: \"contact\"\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\nconst data = React.useMemo(\r\n    () => [\r\n      {\r\n        company: \"Alfred\",\r\n        contact: \"Maria Anders\",\r\n        country: \"Germany\"\r\n      },\r\n      {\r\n        company: \"Centro comercial Moctezuma\",\r\n        contact: \"Francisco Chang\",\r\n        country: \"Mexico\"\r\n      },\r\n      {\r\n        company: \"Ernst Handel\",\r\n        contact: \"Roland Mendel\t\",\r\n        country: \"Austria\"\r\n      }\r\n    ],\r\n    [])\r\n    //tables end\r\n\r\n  const changeColor = () => {\r\n    setTextColor(color === \"black\" ? \"#aadae7\" : \"black\");\r\n    setBgColor(bgColor === \"#6C8B93\" ? \"black\" : \"#6C8B93\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/mariarogina/8ec0844c46fc655d6ca96a098c987e28/raw/9e9a7669a73c9319b92cee6cf02ed5a7e080c77f/myCountries.json\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((dataJson) => {\r\n        setPopUpList(dataJson);\r\n      });\r\n  }, [setPopUpList]);\r\n\r\n  return (\r\n    <div style={styles} className=\"App\">\r\n    <SkinChange onClick={changeColor} />\r\n    <NavBar2/>\r\n      <header className=\"App-header\">\r\n        <DropDownList list={countriesList} />\r\n        {popUpList.map((item, key) => (\r\n          <Popup data={item} key={key + item.title} />\r\n        ))}\r\n        <DataTable />\r\n        <br/>\r\n        <CountryTable/>\r\n        <FetchCountry/>\r\n        <SortedTable columns={columns} data={data}/>\r\n      <br/>\r\n      <br/>\r\n      <ApiTable columns={columns} data={data}/>\r\n        <Footer/>\r\n        \r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}