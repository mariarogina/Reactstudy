{"version":3,"sources":["Components/interactions/DropDownList.js","Components/interactions/Popup.js","Components/tables/DataTable copy.js","countriesList.js","Components/tables/CountryTable.js","Components/tables/GlobalFilter.js","Components/tables/SortedTable.js","Components/tables/PaginationTable.js","Components/tables/ApiTable.js","App.js","reportWebVitals.js","index.js"],"names":["DropDownList","list","useState","activeItem","setActiveItem","style","paddingTop","map","item","key","className","onClick","name","capital","currency","language","maxWidth","src","img","alt","PopupContent","props","color","fontWeight","handleClose","content","Popup","data","btnValue","paragraph","title","imgSrc","isOpen","setIsOpen","togglePopup","type","class","backgroundColor","border","borderRadius","createData","id","DataTable","rowList","setRowList","isUpDirection","setIsUpDirection","initialForm","formData","setFormData","handleAddCountry","useCallback","prevList","handleSortByField","field","sortedRowList","sort","a","b","useEffect","fetch","then","response","json","console","log","placeholder","value","onChange","event","prevState","target","padding","minWidth","margin","minwidth","scope","align","row","index","countriesList","numericCode","population","CountryTable","searchTerm","setSearchTerm","searchTermCity","setSearchTermCity","slice","filteredRowList","filter","toLowerCase","includes","GlobalFilter","setFilter","textAlign","e","SortedTable","columns","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","styles","thead","td","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","PaginationTable","minHeight","fontSize","initialState","pageSize","usePagination","page","nextPage","previousPage","canNextPage","canPreviousPage","disabled","ApiTable","setCells","getData","resp","React","useMemo","Header","accessor","Cell","info","height","original","image","url","App","popUpList","setPopUpList","bgColor","company","contact","country","dataJson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.63e0f24d.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\n\r\nconst DropDownList = ({list}) => {\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  return (\r\n    <div style = {{paddingTop:\"60px\"}}>\r\n      {list && list.map((item, key) => <div key={key}>\r\n          <div className = \"countryname\" onClick={() => setActiveItem(activeItem === key ? null : key)}>{item.name}</div>\r\n          {key === activeItem && <span className = \"countrydrop\">\r\n            <br/> capital - {item.capital},\r\n            <br/> currency - {item.currency},\r\n            <br/> language - {item.language}\r\n            <img style={{maxWidth:'600px'}} src={item.img} alt={item.capital} />\r\n          </span>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDownList","import React, { useState, useCallback } from 'react';\r\n\r\n//popupbox, content, buttons and useState go together\r\n\r\nconst PopupContent = props => {\r\n\r\n    return (\r\n      <div className=\"popup-box\">\r\n        <div className=\"box\">\r\n          <span style={{color:\"#ab0075\", fontWeight:'750'}} className=\"close-icon\" onClick={props.handleClose}>X</span>\r\n          {props.content}\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  };\r\n\r\n\r\n  function Popup({data : {btnValue, paragraph, title, imgSrc}}) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n      setIsOpen(!isOpen);\r\n    }\r\n   \r\n    return <div>\r\n      <button type=\"button\"\r\n       class=\"btn btn-primary\"\r\n       style={{backgroundColor: '#ab0075', border:'none', borderRadius:'8px'}}\r\n        onClick={togglePopup}\r\n  >{btnValue}</button>\r\n        \r\n      <p>{paragraph}</p>\r\n      {isOpen && <PopupContent\r\n        content={\r\n          <div>\r\n            <h1 className = \"poptext\">{title}</h1>\r\n            <img src={imgSrc} alt={title}/>\r\n          </div>\r\n        }\r\n        handleClose={togglePopup}\r\n      />}\r\n\r\n    </div>\r\n  }\r\n \r\n  \r\n  export default Popup;","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nfunction createData(id, name, capital, language, currency) {\r\n  return { id, name, capital, language, currency };\r\n}\r\n\r\nexport default function DataTable() {\r\n  const [rowList, setRowList] = useState([]);\r\n  const [isUpDirection, setIsUpDirection] = useState(true);\r\n  const initialForm = { name: \"\", capital: \"\", language: \"\", currency: \"\" };\r\n  const [formData, setFormData] = useState(initialForm);\r\n\r\n  const handleAddCountry = useCallback(() => {\r\n    setRowList((prevList) => [...prevList, formData]);\r\n    setFormData(initialForm);\r\n  }, [setRowList, setFormData, formData]);\r\n\r\n  const handleSortByField = useCallback(\r\n    (field) => {\r\n      const sortedRowList = rowList.sort((a, b) => {\r\n        if (a[field] > b[field]) {\r\n          return isUpDirection ? 1 : -1;\r\n        } else if (a[field] < b[field]) {\r\n          return isUpDirection ? -1 : 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n\r\n      setRowList(\r\n        sortedRowList.map((item) =>\r\n          createData(\r\n            item.id,\r\n            item.name,\r\n            item.capital,\r\n            item.language,\r\n            item.currency\r\n          )\r\n        )\r\n      );\r\n\r\n      setIsUpDirection(!isUpDirection);\r\n    },\r\n    [rowList, setRowList, setIsUpDirection, isUpDirection]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/mariarogina/1bf4e1947ec2fc1e8ded4882e57f4d69/raw/89eb2570fcfd69f31c4dfd21f5f49733fe0bb4d0/countriesdata.json\"\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setRowList(\r\n          data.map((item) =>\r\n            createData(\r\n              item.id,\r\n              item.name,\r\n              item.capital,\r\n              item.language,\r\n              item.currency\r\n            )\r\n          )\r\n        );\r\n      });\r\n  }, [setRowList, createData]);\r\n\r\n  if (!rowList) {\r\n    return <div>Still Loading</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"50px\" }}>\r\n      <h1 style={{ color: \"white\" }}>The table of Three Countries</h1>\r\n      <br />\r\n\r\n      <div>\r\n        <div>\r\n        <label>\r\n            Id\r\n            <input\r\n            className = \"inpField\"\r\n              type=\"number\"\r\n              placeholder=\"id\"\r\n              value={formData.id}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  id: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            name\r\n            <input\r\n            className = \"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"name\"\r\n              value={formData.name}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  name: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            capital\r\n            <input\r\n            className = \"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"capital\"\r\n              value={formData.capital}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  capital: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            language\r\n            <input\r\n            className = \"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"language\"\r\n              value={formData.language}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  language: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            currency\r\n            <input\r\n            className = \"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"currency\"\r\n              value={formData.currency}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  currency: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ padding: \"10px\", minWidth: \"100px\" }}\r\n            onClick={handleAddCountry}\r\n          >\r\n            Add a country\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <button\r\n        className=\"btn btn-outline-primary\"\r\n        style={{ padding: \"10px\", margin:'10px', minwidth: \"100px\", color:'white'}}\r\n          onClick={() => {\r\n            \r\n\r\n            handleSortByField(\"id\");\r\n          }}\r\n        >\r\n          Sort by Id \r\n        </button>\r\n        <button\r\n        className=\"btn btn-outline-primary\"\r\n        style={{ padding: \"10px\", margin:'10px', minwidth: \"100px\", color:'white'}}\r\n          onClick={() => {\r\n            \r\n\r\n            handleSortByField(\"name\");\r\n          }}\r\n        >\r\n          Sort by Name \r\n        </button>\r\n        <button\r\n        className=\"btn btn-outline-primary\"\r\n        style={{ padding: \"10px\", margin:'10px', minwidth: \"100px\", color:'white'}}\r\n          onClick={() => {\r\n            \r\n\r\n            handleSortByField(\"capital\");\r\n          }}\r\n        >\r\n          Sort by Capital \r\n        </button>\r\n        <button\r\n        className=\"btn btn-outline-primary\"\r\n        style={{ padding: \"10px\", margin:'10px', minwidth: \"100px\", color:'white'}}\r\n          onClick={() => {\r\n            \r\n\r\n            handleSortByField(\"language\");\r\n          }}\r\n        >\r\n          Sort by Language \r\n        </button>\r\n        <button\r\n        className=\"btn btn-outline-primary\"\r\n        style={{ padding: \"10px\", margin:'10px', minwidth: \"100px\", color:'white'}}\r\n          onClick={() => {\r\n            \r\n\r\n            handleSortByField(\"currency\");\r\n          }}\r\n        >\r\n          Sort by Currency \r\n        </button>\r\n\r\n        <table className=\"table\" style={{ color: \"inherit\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" \r\n              align=\"center\"\r\n              onClick={() => handleSortByField(\"id\")}>\r\n                No.\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"name\")}\r\n              >\r\n                Name\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"capital\")}\r\n              >\r\n                Capital\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"language\")}\r\n              >\r\n                Language\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"currency\")}\r\n              >\r\n                Currency\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {rowList.map((row, index) => (\r\n              <tr key={row.name}>\r\n                <th scope=\"row\">{row.id}</th>\r\n\r\n                <td align=\"center\">{row.name}</td>\r\n                <td align=\"center\">{row.capital}</td>\r\n                <td align=\"center\">{row.language}</td>\r\n                <td align=\"center\">{row.currency}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const countriesList = [\r\n  { name: \"RUSSIA\", capital: \"Moscow\", currency: \"RUB\", language: \"Russian\", img: \"https://passportsvisasandmore.co/wp-content/uploads/2019/08/Vita-notturna-Mosca-by-night-580x341.jpg\" },\r\n  { name: \"FINLAND\", capital: \"Helsinki\", currency: \"EUR\", language: \"Finnish\", img: \"https://ak.picdn.net/shutterstock/videos/1023580819/thumb/1.jpg\" },\r\n  { name: \"UK\", capital: \"London\", currency: \"GBP\", language: \"English\", img: \"https://www.sftrips.com/wp-content/uploads/2016/03/z8888.jpg\" }\r\n];\r\n","import React, { useCallback } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction createData(numericCode, name, capital, population) {\r\n  return { numericCode, name, capital, population };\r\n}\r\n\r\nexport default function CountryTable() {\r\n  const [rowList, setRowList] = useState(null);\r\n  const [isUpDirection, setIsUpDirection] = useState(true);\r\n  const initialForm = {\r\n    numericCode: \"\",\r\n    name: \"Country\",\r\n    capital: \"\",\r\n    population: 0,\r\n  };\r\n  const [formData, setFormData] = useState(initialForm);\r\n\r\n  const handleAddCountry = useCallback(() => {\r\n    setRowList((prevList) => [...prevList, formData]);\r\n    setFormData(initialForm);\r\n  }, [setRowList, setFormData, formData]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchTermCity, setSearchTermCity] = useState(\"\");\r\n\r\n  // const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleSortByField = useCallback(\r\n    (field) => {\r\n      const sortedRowList = rowList.sort((a, b) => {\r\n        if (a[field] > b[field]) {\r\n          return isUpDirection ? 1 : -1;\r\n        } else if (a[field] < b[field]) {\r\n          return isUpDirection ? -1 : 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n\r\n      setRowList(\r\n        sortedRowList.map((item) =>\r\n          createData(item.numericCode, item.name, item.capital, item.population)\r\n        )\r\n      );\r\n\r\n      setIsUpDirection(!isUpDirection);\r\n    },\r\n    [rowList, setRowList, setIsUpDirection, isUpDirection]\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n  const handleChangeCity = (event) => {\r\n    setSearchTermCity(event.target.value);\r\n  };\r\n\r\n  /*\r\n  useEffect(() => {\r\n    if(!rowList){\r\n      return\r\n    }\r\n    const results = rowList.filter(item =>\r\n      item.name.toLowerCase().includes(searchTerm)\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n*/\r\n\r\n  // console.log(searchResults)\r\n  /*\r\n  setRowList(\r\n    searchResults.map((item) =>\r\n      createData(item.numericCode, item.name, item.capital, item.population)\r\n    )\r\n  );\r\n  */\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setRowList(\r\n          data\r\n            .slice(20, 35)\r\n            .map((item) =>\r\n              createData(\r\n                item.numericCode,\r\n                item.name,\r\n                item.capital,\r\n                item.population\r\n              )\r\n            )\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  if (!rowList) {\r\n    return <div>Still Loading</div>;\r\n  }\r\n\r\n  const filteredRowList = rowList.filter((item) =>\r\n    item.name.toLowerCase().includes(searchTerm)  &&\r\n    item.capital.toLowerCase().includes(searchTermCity) \r\n  );\r\n\r\n  /*\r\n  const filteredRowList = rowList.filter((item) =>\r\n     item.capital.toLowerCase().includes(searchTermCity) \r\n  );\r\n  */\r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ paddingTop: \"50px\" }}>\r\n      <h1 style={{ color: \"#ab0075\" }}>The Table of Countries</h1>\r\n      <br />\r\n      <div className=\"App\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter country\"\r\n          value={searchTerm}\r\n          onChange={handleChange}\r\n        />\r\n        <div />\r\n        <div className=\"App\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter city\"\r\n          value={searchTermCity}\r\n          onChange={handleChangeCity}\r\n        />\r\n        <div />\r\n        <div>\r\n          <br />\r\n          <h1> ADD A COUNTRY </h1>\r\n          <label>\r\n            Code\r\n            <input\r\n              className=\"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"numericCode\"\r\n              value={formData.numericCode}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  numericCode: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            Name\r\n            <input\r\n              className=\"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"name\"\r\n              value={formData.name}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  name: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            Capital\r\n            <input\r\n              className=\"inpField\"\r\n              type=\"text\"\r\n              placeholder=\"capital\"\r\n              value={formData.capital}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  capital: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            Population\r\n            <input\r\n              className=\"inpField\"\r\n              type=\"number\"\r\n              placeholder=\"population\"\r\n              value={formData.population}\r\n              onChange={(event) =>\r\n                setFormData((prevState) => ({\r\n                  ...prevState,\r\n                  population: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <br />\r\n          <br />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ padding: \"10px\", minwidth: \"100px\" }}\r\n            onClick={handleAddCountry}\r\n          >\r\n            Add a country\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-primary\"\r\n            style={{\r\n              padding: \"10px\",\r\n              margin: \"10px\",\r\n              minwidth: \"100px\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => {\r\n              handleSortByField(\"numericCode\");\r\n            }}\r\n          >\r\n            Sort by Code{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-primary\"\r\n            style={{\r\n              padding: \"10px\",\r\n              margin: \"10px\",\r\n              minwidth: \"100px\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => {\r\n              handleSortByField(\"name\");\r\n            }}\r\n          >\r\n            Sort by Name{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-primary\"\r\n            style={{\r\n              padding: \"10px\",\r\n              margin: \"10px\",\r\n              minwidth: \"100px\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => {\r\n              handleSortByField(\"capital\");\r\n            }}\r\n          >\r\n            Sort by Capital{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-primary\"\r\n            style={{\r\n              padding: \"10px\",\r\n              margin: \"10px\",\r\n              minwidth: \"100px\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => {\r\n              handleSortByField(\"population\");\r\n            }}\r\n          >\r\n            Sort by Population{\" \"}\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <table className=\"table\" style={{ color: \"inherit\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"numericCode\")}\r\n              >\r\n                Code\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"name\")}\r\n              >\r\n                Name\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"capital\")}\r\n              >\r\n                Capital\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                onClick={() => handleSortByField(\"population\")}\r\n              >\r\n                Population\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {filteredRowList.map((row) => (\r\n              <tr key={row.numericCode}>\r\n                <th scope=\"row\">{row.numericCode}</th>\r\n\r\n                <td align=\"center\">{row.name}</td>\r\n                <td align=\"center\">{row.capital}</td>\r\n                <td align=\"center\">{row.population}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function GlobalFilter({ filter, setFilter }) {\r\n    return (\r\n      <>\r\n        <p style={{textAlign:\"center\"}}> Search here: </p>\r\n        <input value={filter || \"\"} onChange={(e) => setFilter(e.target.value)} />\r\n      </>\r\n    );\r\n  }","import React from \"react\";\r\nimport { useSortBy, useTable, useGlobalFilter } from \"react-table\";\r\nimport GlobalFilter from \"./GlobalFilter\"\r\n\r\nexport  function SortedTable({ columns, data }) {\r\n  // Use the useTable Hook to send the columns and data to build the table\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows, // rows for the table based on the data passed\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    state, //table state\r\n    setGlobalFilter //applies global filtering to the table.\r\n\r\n} = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy\r\n    \r\n  );\r\n  const { globalFilter } = state;\r\n  /* \r\n    Render the UI for your table\r\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\r\n  */\r\n  const styles = {\r\n    thead: {\r\n      backgroundColor: \"#2c4e85\"\r\n    },\r\n    td: {\r\n      padding: \"10px\",\r\n      border: \"dotted 1px black\"\r\n    }\r\n  };\r\n\r\n  return ( <>\r\n  <h1>RANDOM SORTED FILTERED TABLE</h1>\r\n  <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n    <table style={{textAlign:\"center\",margin:'0px auto'}} {...getTableProps()}>\r\n      <thead style={styles.thead}>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                {column.render(\"Header\")}\r\n                <span>\r\n                  {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\r\n                </span>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return <td style={styles.td} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { useTable, usePagination } from \"react-table\";\r\n\r\nexport function PaginationTable({ columns, data,  }) {\r\n\r\n\r\n    const styles = {\r\n        thead: {\r\n          backgroundColor: \"#2c4e85\"\r\n        },\r\n        td: {\r\n          padding: \"10px\",\r\n          border: \"dotted 1px black\",\r\n          maxWidth:'400px',\r\n          minHeight:'70px',\r\n          fontSize:'1.3rem'\r\n        }\r\n      };\r\n  // Use the useTable Hook to send the columns and data to build the table\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    page, // fetch the current page\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageSize: 2 }\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <div >\r\n      <table style ={{textAlign:\"center\",margin:\"0 auto\"}} {...getTableProps()}>\r\n        <thead style={styles.thead}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={styles.td} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    \r\n                  );\r\n                })}\r\n               \r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button type=\"button\" className=\"info\" style={{backgroundColor: '#370F96', margin:'5px', padding:'10px', color:'white', fontSize:'1.1rem', borderRadius:'6px'}} onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous page{\" \"}\r\n      </button>\r\n      <button type=\"button\" className=\"info\" style={{backgroundColor: '#9B2076', margin:'5px', padding:'10px', color:'white', fontSize:'1.1rem', borderRadius:'6px' }} onClick={() => nextPage()} disabled={!canNextPage}>\r\n        Next page{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n}","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PaginationTable } from \"./PaginationTable\";\r\n\r\nexport function ApiTable() {\r\n  const [cells, setCells] = useState([]);\r\n \r\n\r\n  const getData = async () => {\r\n    const resp = await fetch(\"https://api.thecatapi.com/v1/breeds\");\r\n    const data = await resp.json();\r\n    setCells(data);\r\n   \r\n  };\r\n  \r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\" // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Description\",\r\n        accessor: \"description\"\r\n      },\r\n      {\r\n        Header: \"Temperament\",\r\n        accessor: \"temperament\"\r\n      }\r\n,\r\n      {\r\n        Header: \"Image\",\r\n        accessor: \"image.url\",  \r\n        Cell: (row) => {\r\n          console.info(row)\r\n          return <div><img height={200} src={row.row.original.image?.url}/></div>\r\n        },\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return <>\r\n  <h1>THE CAT TABLE (paginated)</h1>\r\n  \r\n  {cells && <PaginationTable columns={columns} data={cells} />}</>;\r\n}","import \"./App.css\";\r\nimport DropDownList from \"./Components/interactions/DropDownList\";\r\nimport Popup from \"./Components/interactions/Popup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"./Components/tables/DataTable copy\";\r\nimport { countriesList } from \"./countriesList\";\r\n\r\nimport CountryTable from \"./Components/tables/CountryTable\";\r\nimport { SortedTable }from './Components//tables/SortedTable';\r\nimport { ApiTable } from './Components/tables/ApiTable';\r\n\r\n// const popUpList = [\r\n//   {\"btnValue\" : \"Come and visit Moscow\", \"paragraph\" : \"Moscow is the Capital of Russia\", \"title\": \"Welcome to Moscow\", \"imgSrc\": \"https://gkd.ru/assets/i/ai/4/2/8/i/2884202.jpg\"},\r\n//   {\"btnValue\" : \"Come and visit Helsinki\", \"paragraph\" : \"Helsinki is the Capital of Finland\", \"title\": \"Welcome to HEL\", \"imgSrc\": \"https://www.likefinland.com/images/artikkelikuvat/helsinki/allas%20sea%20pool1.jpg\"},\r\n//   {\"btnValue\" : \"Come and visit London\", \"paragraph\" : \"London is the Capital of Great Britain\", \"title\": \"Welcome to London\", \"imgSrc\": \"https://www.overseasattractions.com/wp-content/uploads/2018/08/london-at-night.jpg\"}\r\n// ]\r\n\r\n\r\nfunction App() {\r\n  const [popUpList, setPopUpList] = useState([]);\r\n  const [color, setTextColor] = useState(\"black\");\r\n  const [bgColor, setBgColor] = useState(\"#6C8B93\");\r\n  \r\n \r\n  let styles = { backgroundColor: bgColor, color: color };\r\n\r\n  //tables\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Company\",\r\n        accessor: \"company\" // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Contact\",\r\n        accessor: \"contact\"\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\nconst data = React.useMemo(\r\n    () => [\r\n      {\r\n        company: \"Alfred\",\r\n        contact: \"Maria Anders\",\r\n        country: \"Germany\"\r\n      },\r\n      {\r\n        company: \"Centro comercial Moctezuma\",\r\n        contact: \"Francisco Chang\",\r\n        country: \"Mexico\"\r\n      },\r\n      {\r\n        company: \"Ernst Handel\",\r\n        contact: \"Roland Mendel\t\",\r\n        country: \"Austria\"\r\n      }\r\n    ],\r\n    [])\r\n    //tables end\r\n\r\n  const changeColor = () => {\r\n    setTextColor(color === \"black\" ? \"#aadae7\" : \"black\");\r\n    setBgColor(bgColor === \"#6C8B93\" ? \"black\" : \"#6C8B93\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/mariarogina/8ec0844c46fc655d6ca96a098c987e28/raw/9e9a7669a73c9319b92cee6cf02ed5a7e080c77f/myCountries.json\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((dataJson) => {\r\n        setPopUpList(dataJson);\r\n      });\r\n  }, [setPopUpList]);\r\n\r\n  return (\r\n    <div style={styles} className=\"App\">\r\n   \r\n   \r\n      <header className=\"App-header\">\r\n        <DropDownList list={countriesList} />\r\n        {popUpList.map((item, key) => (\r\n          <Popup data={item} key={key + item.title} />\r\n        ))}\r\n        <DataTable />\r\n        <br/>\r\n        <CountryTable/>\r\n        \r\n        <SortedTable columns={columns} data={data}/>\r\n      <br/>\r\n      <br/>\r\n      <ApiTable columns={columns} data={data}/>\r\n        \r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}